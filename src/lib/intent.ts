/* src/lib/intent.ts */
import OpenAI from "openai";
const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY! });

/* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –∏–Ω—Ç–µ–Ω—Ç ‚áí id —É–∑–ª–∞ –≤ flow.ts ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
export const INTENTS = {
  /* –æ—Ç–≤–µ—Ç—ã‚Äë–∫–Ω–æ–ø–∫–∏ */
  yes: "yes",
  no: "no",
  continue: "continue",

  /* –±—ã—Å—Ç—Ä—ã–µ –≤–æ–ø—Ä–æ—Å—ã –≥–æ—Å—Ç–µ–π */
  dresscode: "dresscode",      // –¥—Ä–µ—Å—Å‚Äë–∫–æ–¥
  route: "route",          // –∫–∞–∫ –¥–æ–±—Ä–∞—Ç—å—Å—è
  venue: "venue",          // –≥–¥–µ / –º–µ—Å—Ç–æ
  time: "time",           // –¥–∞—Ç—ã / –≤–æ‚Äë—Å–∫–æ–ª—å–∫–æ
  contacts: "contacts",       // —Å –∫–µ–º —Å–≤—è–∑–∞—Ç—å—Å—è
  wish: "wish",           // —Ö–æ—á—É –æ—Å—Ç–∞–≤–∏—Ç—å –ø–æ–∂–µ–ª–∞–Ω–∏–µ
  fun_fact: "fun_fact",       // –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç
  gifts: "gifts",          // —á—Ç–æ –¥–∞—Ä–∏—Ç—å
  schedule: "schedule",       // —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–Ω—è
  alcohol: "alcohol",        // –ø—Ä–∞–≤–∏–ª–∞ –ø–∏—Ç—å—è
  dietary_choice: "dietary_choice", // –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –≤ –µ–¥–µ
  video: "video_bonus", // –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –≤ –µ–¥–µ
} as const;

export type Intent = keyof typeof INTENTS;

/* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –ª–æ–∫–∞–ª—å–Ω—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∏–Ω—Ç–µ–Ω—Ç–∞ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
const INTENT_PATTERNS: Record<Intent, RegExp[]> = {
  /* ==== —Å—Ç–∞—Ä–æ–µ ‚Äî –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π ==== */
  yes: [/^(–¥–∞|–∞–≥–∞|–∫–æ–Ω–µ—á–Ω–æ|—Å–æ–≥–ª–∞—Å[–∞—é]—Å—å|–±—É–¥[—É]|–ø—Ä–∏–µ–¥—É)/i],
  no: [/^(–Ω–µ—Ç|–Ω–µ–∞|—É–≤—ã|–Ω–µ —Å–º–æ–≥—É|–∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é)/i],
  continue: [/(–¥–∞–ª—å—à–µ|–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å|–¥–µ—Ç–∞–ª–∏|–ø–æ–µ—Ö–∞–ª–∏|go on|–æ–∫–µ–π|ok|–≥–æ—Ç–æ–≤)/i],

  /* ==== –Ω–æ–≤—ã–µ / —É—Ç–æ—á–Ω—ë–Ω–Ω—ã–µ ======== */
  venue: [
    /(–≥–¥–µ|–∞–¥—Ä–µ—Å|–ª–æ–∫–∞—Ü|–º–µ—Å—Ç–æ\s*–ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è|—É—Å–∞–¥—å–±|village|lifehack)/i,
  ],
  time: [
    /(–∫–æ–≥–¥–∞|–¥–∞—Ç–∞|—á–∏—Å–ª(?:–æ|–∞)|–≤–æ\s*—Å–∫–æ–ª—å–∫–æ|–≤—Ä–µ–º—è|–∫–∞–∫–æ–≥–æ|–∫–∞–¥–∞)/i,
  ],
  route: [
    /(–∫–∞–∫.*(–¥–æ–µ—Ö–∞—Ç—å|–¥–æ–±—Ä–∞—Ç—å—Å—è|–ø—Ä–æ–µ—Ö–∞—Ç—å)|–¥–æ—Ä–æ–≥–∞|–º–∞—Ä—à—Ä—É—Ç|—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç|–∫–∞—Ä—Ç–∞|map)/i,
  ],
  contacts: [
    /(–∫–æ–Ω—Ç–∞–∫—Ç|–æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä|–∫–æ–º—É.*–ø–∏—Å–∞—Ç—å|—Å–≤—è–∑–∞—Ç—å—Å—è|—Ç–µ–ª–µ—Ñ–æ–Ω|–∑–≤–æ–Ω–∏—Ç—å|whatsapp|telegram|–Ω–æ–º–µ—Ä)/i,
  ],
  wish: [
    /(–ø–æ–∂–µ–ª–∞–Ω–∏|–ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏|–ø–æ–∑–¥—Ä–∞–≤–∏—Ç—å|—Ö–æ—á—É\s*–ø–æ–∂–µ–ª–∞—Ç|–æ—Å—Ç–∞–≤–∏—Ç—å\s*–ø–æ–∂–µ–ª)/i,
  ],
  fun_fact: [
    /(–∏–Ω—Ç–µ—Ä–µ—Å–Ω\w*\s+(—Ñ–∞–∫—Ç|–∏—Å—Ç–æ—Ä)|–∑–∞–±–∞–≤–Ω\w*\s*—Ñ–∞–∫—Ç|fun\s*fact|—Ä–∞—Å—Å–∫–∞–∂–∏.*—Ñ–∞–∫—Ç)/i,
  ],
  gifts: [
    /(–ø–æ–¥–∞—Ä(–æ–∫|–∫–∏)|—á—Ç–æ\s*–¥–∞—Ä–∏—Ç—å|–¥–∞—Ä(?:–∞|—è—Ç)|–∫–æ–Ω–≤–µ—Ä—Ç|—Ä–µ–∫–≤–∏–∑–∏—Ç|–∫–∞—Ä—Ç–∞|—Å—á[–µ—ë]—Ç|money|–¥–µ–Ω—å–≥)/i,
  ],
  dresscode: [
    /(dress.?code|–¥—Ä–µ—Å—Å.?–∫–æ–¥|–≤–æ.?—á—Ç–æ|–æ–¥–µ—Ç[—å—Å—è]|–Ω–∞—Ä—è–¥|—Ü–≤–µ—Ç[–∞–æ])/i,
  ],
  schedule: [
    /(—Ä–∞—Å–ø–∏—Å–∞–Ω|—Ç–∞–π–º–∏–Ω–≥|–ø—Ä–æ–≥—Ä–∞–º–º|schedule|timeline|–ø–æ—Ä—è–¥–æ–∫\s*–¥–Ω—è|–≤–æ\s*—Å–∫–æ–ª—å–∫–æ.*—á—Ç–æ)/i,
  ],
  alcohol: [
    /(–∞–ª–∫–æ–≥–æ–ª|–ø–∏—Ç—å|drinks|–≤–∏–Ω–æ|–Ω–∞–ø–∏—Ç–∫|—Å–ø–∏—Ä—Ç–Ω|–º–æ–∂–Ω–æ\s*–ª–∏\s*–∞–ª–∫–æ–≥–æ–ª)/i,
  ],
  video: [
    /(–≤–∏–¥–µ–æ|—Ç–∏–∑–µ—Ä|—Ä–æ—Å–ø–∏—Å|–±–æ–Ω—É—Å)/i,
  ],
  dietary_choice: [
    /* —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–∞–≤–∏–ª–∞ ‚Äî –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å */
    /(–≤–µ–≥–∞–Ω|–≤–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω(–µ—Ü|–∫–∞|—Å—Ç–≤–æ)|plant.?based)/i,
    /(–±–µ–∑\s*(–º—è—Å–∞|—Ä—ã–±—ã|–≥–ª—é—Ç–µ–Ω–∞|–ª–∞–∫—Ç–æ–∑—ã|–º–æ–ª–æ–∫–∞|–æ—Ä–µ—Ö–æ–≤|sea\s*food|seafood))/i,
    /(–µ–º|–ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é|–ª—é–±–ª—é).*(—Ç–æ–ª—å–∫–æ)?\s*(–º—è—Å–æ|—Ä—ã–±\w+|–ø—Ç–∏—Ü—É|–æ–≤–æ—â–∏)/i,
    /(meat|fish|pescatarian|vegan|vegetarian|gluten[- ]?free|lactose[- ]?free)/i,
    /(–∞–ª–ª–µ—Ä–≥–∏(—è|–∏)\s*–Ω–∞\s*(–≥–ª—é—Ç–µ–Ω|–æ—Ä–µ—Ö–∏|–º–æ–ª–æ–∫–æ|–ª–∞–∫—Ç–æ–∑—É|–º–æ—Ä–µ–ø—Ä–æ–¥—É–∫—Ç—ã|seafood))/i,
    /(^|\s)(–º—è—Å–æ|—Å—Ç–µ–π–∫|–≥—Ä–∏–ª—å|barbeque|meat|ü•©|üçó|üçñ)(\s|$)/i,
    /(^|\s)(—Ä—ã–±(–∞|—ã|—É|–æ–π|–µ)|fish|–º–æ—Ä–µ–ø—Ä–æ–¥—É–∫—Ç—ã|seafood|üç£|üêü|ü¶û|ü¶ê)(\s|$)/i,
    /\b(–≤–µ–≥–∞–Ω(?:—Å—Ç–≤–æ)?|–≤–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω(?:–µ—Ü|–∫–∞|—Å—Ç–≤–æ)?|pescatarian)\b/i,
    /\b–±–µ–∑\s+(–º—è—Å–∞|—Ä—ã–±—ã|–≥–ª—é—Ç–µ–Ω–∞|–ª–∞–∫—Ç–æ–∑—ã|–æ—Ä–µ—Ö–æ–≤|—Å–∞—Ö–∞—Ä–∞)\b/i,
    /^(\s*–Ω–µ—Ç\s*$|\s*–±–µ–∑\s*—Ä–∞–∑–Ω–∏—Ü—ã\s*$)/i,
  ],
};

/* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Å–ø–æ—Ä—Ç ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
export async function detectIntent(input: string, allowed: Intent[] = Object.keys(INTENTS) as Intent[]): Promise<Intent | "unknown"> {
  const text = input.trim().toLowerCase();

  var TAGS = Object.keys(INTENTS) as (keyof typeof INTENTS)[];

  if (allowed.length > 0) {
    TAGS = allowed;
  }

  /* 1Ô∏è‚É£  –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ RegExp */
  // for (const k of TAGS) if (INTENT_PATTERNS[k].some(rx => rx.test(text))) return k;

  console.log(input)

  const intentFn = {
    name: "return_intent",
    description: "Return ONLY one intent tag that matches the guest phrase or Unknown if nothing fits.",
    parameters: {
      type: "object",
      properties: {
        tag: { type: "string", enum: TAGS },
      },
      required: ["tag"],
    },
  };

  /* 2Ô∏è‚É£  GPT‚Äëfallback –∫–∞–∫ –ö–õ–ê–°–°–ò–§–ò–ö–ê–¢–û–† */
  const r = await openai.chat.completions.create({
    model: "gpt-3.5-turbo-0125",          // –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç function calling
    temperature: 0,
    top_p: 0,
    messages: [
      { role: "system", content: "–¢—ã –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä, –Ω–µ —á–∞—Ç‚Äë–±–æ—Ç." },
      // ‚Ää‚Äî F E W  S H O T ‚Äî
      { role: "user", content: "–í–æ —Å–∫–æ–ª—å–∫–æ –Ω–∞—á–∞–ª–æ?" },
      { role: "assistant", content: JSON.stringify({ tag: "time" }) },
      { role: "user", content: "–ö–∞–∫–æ–π –¥—Ä–µ—Å—Å –∫–æ–¥?" },
      { role: "assistant", content: JSON.stringify({ tag: "dresscode" }) },
      { role: "user", content: "üêü –†—ã–±–∞" },
      { role: "assistant", content: JSON.stringify({ tag: "dietary_choice" }) },
      // ‚Äî WISH ‚Äî
      { role: "user", content: "–ú–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –ø–æ–∂–µ–ª–∞–Ω–∏–µ –º–æ–ª–æ–¥—ã–º?" },
      { role: "assistant", content: JSON.stringify({ tag: "wish" }) },

      // ‚Äî FUN FACT ‚Äî
      { role: "user", content: "–î–∞–π –∫–∞–∫–æ–π-–Ω–∏–±—É–¥—å –∑–∞–±–∞–≤–Ω—ã–π —Ñ–∞–∫—Ç –æ –ø–∞—Ä–µ" },
      { role: "assistant", content: JSON.stringify({ tag: "fun_fact" }) },

      // ‚Äî GIFTS ‚Äî
      { role: "user", content: "–ß—Ç–æ –ª—É—á—à–µ –ø–æ–¥–∞—Ä–∏—Ç—å?" },
      { role: "assistant", content: JSON.stringify({ tag: "gifts" }) },

      // ‚Äî SCHEDULE ‚Äî
      { role: "user", content: "–ö–∞–∫–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å —Å–≤–∞–¥—å–±—ã?" },
      { role: "assistant", content: JSON.stringify({ tag: "schedule" }) },

      // ‚Äî ALCOHOL ‚Äî
      { role: "user", content: "–ê–ª–∫–æ–≥–æ–ª—å –±—É–¥–µ—Ç? –ú–æ–∂–Ω–æ —Å–≤–æ—ë –≤–∏–Ω–æ?" },
      { role: "assistant", content: JSON.stringify({ tag: "alcohol" }) },

      // ‚Äî DIETARY CHOICE ‚Äî
      { role: "user", content: "–Ø –Ω–µ –µ–º –º—è—Å–æ, —Ç–æ–ª—å–∫–æ —Ä—ã–±—É üêü" },
      { role: "assistant", content: JSON.stringify({ tag: "dietary_choice" }) },
      { role: "user", content: "–ë–µ–∑ –≥–ª—é—Ç–µ–Ω–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞" },
      { role: "assistant", content: JSON.stringify({ tag: "dietary_choice" }) },
      { role: "user",      content: "–†–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ –ø–æ–ª–∏—Ç–∏–∫—É" },
      { role: "assistant", content: JSON.stringify({ tag: "unknown" }) },
      // ‚Ää‚Äî –ö–û–ù–ï–¶ –ü–†–ò–ú–ï–†–û–í ‚Äî
      { role: "user", content: text },
    ],
    functions: [intentFn],
    function_call: { name: "return_intent" },   // –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –≤—ã–∑–æ–≤
  });

  /* 3Ô∏è‚É£  –ó–∞–±–∏—Ä–∞–µ–º –æ—Ç–≤–µ—Ç —Å—Ç—Ä–æ–≥–æ –∏–∑ arguments */
  const call = r.choices[0].message?.function_call;
  if (call?.name === "return_intent" && call.arguments) {
    try {
      const { tag } = JSON.parse(call.arguments);
      return TAGS.includes(tag) ? tag : "unknown";
    } catch { /* fallthrough */ }
  }
  return "unknown";
}
